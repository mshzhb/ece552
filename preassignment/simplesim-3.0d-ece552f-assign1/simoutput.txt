sim-safe: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).

sim: command line: sim-safe -redir:sim simoutput.txt -v -max:inst 165 test 

sim: simulation started @ Sat Sep 21 13:56:20 2013, options follow:

sim-safe: This simulator implements a functional simulator.  This
functional simulator is the simplest, most user-friendly simulator in the
simplescalar tool set.  Unlike sim-fast, this functional simulator checks
for all instruction errors, and the implementation is crafted for clarity
rather than speed.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                     true # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim     simoutput.txt # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst                 165 # maximum number of inst's to execute

sim: ** starting functional simulation **
         1 [xor: 0x7fff8009] @ 0x00400140: lw        r16,0(r29)  mem: 0x7fff8000
         2 [xor: 0x6ffe8019] @ 0x00400148: lui       r28,0x1001
         3 [xor: 0x6fff02e9] @ 0x00400150: addiu     r28,r28,-32032
         4 [xor: 0x100082dd] @ 0x00400158: addiu     r17,r29,4
         5 [xor: 0x6fff02e5] @ 0x00400160: addiu     r3,r17,4
         6 [xor: 0x6fff02f1] @ 0x00400168: sll       r2,r16,2
         7 [xor: 0x6fff02e5] @ 0x00400170: addu      r3,r3,r2
         8 [xor: 0x10008219] @ 0x00400178: addu      r18,r0,r3
         9 [xor: 0x100082e9] @ 0x00400180: sw        r18,-32588(r28)  mem: 0x10000394
        10 [xor: 0x10007d11] @ 0x00400188: addiu     r29,r29,-24
        11 [xor: 0x10007d00] @ 0x00400190: addu      r4,r0,r16
        12 [xor: 0x6ffffd34] @ 0x00400198: addu      r5,r0,r17
        13 [xor: 0x10007d08] @ 0x004001a0: addu      r6,r0,r18
        14 [xor: 0x10407858] @ 0x004001a8: jal       0x400540
        15 [xor: 0x10407c80] @ 0x00400540: addiu     r29,r29,-24
        16 [xor: 0x10407c90] @ 0x00400548: sw        r31,16(r29)  mem: 0x7fff7fe0
        17 [xor: 0x10407450] @ 0x00400550: jal       0x400960
        18 [xor: 0x10407800] @ 0x00400960: addiu     r29,r29,-24
        19 [xor: 0x10407810] @ 0x00400968: sw        r16,16(r29)  mem: 0x7fff7fc8
        20 [xor: 0x6fbff805] @ 0x00400970: addu      r16,r0,r5
        21 [xor: 0x6fbff8f5] @ 0x00400978: sw        r31,20(r29)  mem: 0x7fff7fcc
        22 [xor: 0x6fbff805] @ 0x00400980: beq       r16,r0,0x4009d0
        23 [xor: 0x1040789c] @ 0x00400988: lw        r4,0(r16)  mem: 0x7fff8004
        24 [xor: 0x1040788c] @ 0x00400990: beq       r4,r0,0x4009d0
        25 [xor: 0x6fbff897] @ 0x00400998: addiu     r5,r0,47
        26 [xor: 0x6fbfe62f] @ 0x004009a0: jal       0x401bd0
        27 [xor: 0x6fbff477] @ 0x00401bd0: addiu     r29,r29,-32
        28 [xor: 0x6fbff447] @ 0x00401bd8: sw        r17,20(r29)  mem: 0x7fff7fac
        29 [xor: 0x1040745c] @ 0x00401be0: andi      r17,r5,255
        30 [xor: 0x1040744c] @ 0x00401be8: sw        r31,24(r29)  mem: 0x7fff7fb0
        31 [xor: 0x1040745c] @ 0x00401bf0: sw        r16,16(r29)  mem: 0x7fff7fa8
        32 [xor: 0x104073b4] @ 0x00401bf8: bne       r17,r0,0x401c18
        33 [xor: 0x6fbff468] @ 0x00401c18: addu      r16,r0,r0
        34 [xor: 0x6fbff458] @ 0x00401c20: addu      r5,r0,r17
        35 [xor: 0x6fbfb6d0] @ 0x00401c28: jal       0x404b30
        36 [xor: 0x6fbfe1d0] @ 0x00404b30: addiu     r29,r29,-16
        37 [xor: 0x6fbfe1a0] @ 0x00404b38: andi      r5,r5,255
        38 [xor: 0x6fbfe1d4] @ 0x00404b40: andi      r2,r4,3
        39 [xor: 0x6fbfe114] @ 0x00404b48: beq       r2,r0,0x404b80
        40 [xor: 0x1141e1d4] @ 0x00404b80: lui       r8,0x7efe
        41 [xor: 0x11411f3b] @ 0x00404b88: ori       r8,r8,65279
        42 [xor: 0x1141302b] @ 0x00404b90: sll       r2,r5,8
        43 [xor: 0x11411f34] @ 0x00404b98: or        r9,r5,r2
        44 [xor: 0x3e6e3004] @ 0x00404ba0: sll       r2,r9,16
        45 [xor: 0x11413014] @ 0x00404ba8: or        r9,r9,r2
        46 [xor: 0x1acdd57c] @ 0x00404bb0: lw        r6,0(r4)  mem: 0x7fff8088
        47 [xor: 0x9bccd40c] @ 0x00404bb8: nor       r7,r0,r8
        48 [xor: 0x9bccd478] @ 0x00404bc0: addiu     r4,r4,4
        49 [xor: 0x17413017] @ 0x00404bc8: addu      r3,r6,r8
        50 [xor: 0xb3e2aa8c] @ 0x00404bd0: nor       r2,r0,r6
        51 [xor: 0x386e3037] @ 0x00404bd8: xor       r3,r3,r2
        52 [xor: 0x4090ceff] @ 0x00404be0: and       r3,r3,r7
        53 [xor: 0x4090ceef] @ 0x00404be8: bne       r3,r0,0x404c20
        54 [xor: 0x90401e2f] @ 0x00404bf0: xor       r2,r6,r9
        55 [xor: 0x4a1b5085] @ 0x00404bf8: addu      r3,r2,r8
        56 [xor: 0xb5e4a88a] @ 0x00404c00: nor       r2,r0,r2
        57 [xor: 0x11471d3e] @ 0x00404c08: xor       r3,r3,r2
        58 [xor: 0x6fbfe1d0] @ 0x00404c10: and       r3,r3,r7
        59 [xor: 0x6fbfe670] @ 0x00404c18: beq       r3,r0,0x404bb0
        60 [xor: 0x5e9fd1a4] @ 0x00404bb0: lw        r6,0(r4)  mem: 0x7fff808c
        61 [xor: 0x5e9fd1d4] @ 0x00404bb8: nor       r7,r0,r8
        62 [xor: 0x5e9fd1b8] @ 0x00404bc0: addiu     r4,r4,4
        63 [xor: 0x9acd8257] @ 0x00404bc8: addu      r3,r6,r8
        64 [xor: 0x84c29d1c] @ 0x00404bd0: nor       r2,r0,r6
        65 [xor: 0x3e6e37d3] @ 0x00404bd8: xor       r3,r3,r2
        66 [xor: 0x4090cfe3] @ 0x00404be0: and       r3,r3,r7
        67 [xor: 0x4090c823] @ 0x00404be8: bne       r3,r0,0x404c20
        68 [xor: 0x4090cee3] @ 0x00404c20: lbu       r3,-4(r4)  mem: 0x7fff808c
        69 [xor: 0x85c3e480] @ 0x00404c28: addiu     r2,r4,-4
        70 [xor: 0x85c3e490] @ 0x00404c30: beq       r3,r5,0x404cc0
        71 [xor: 0x85c3e418] @ 0x00404c38: beq       r3,r0,0x404cb8
        72 [xor: 0xfa3c646c] @ 0x00404cb8: addu      r2,r0,r0
        73 [xor: 0xfa3c640c] @ 0x00404cc0: addiu     r29,r29,16
        74 [xor: 0xfa3c34fc] @ 0x00404cc8: jr        r31
        75 [xor: 0xfa3c6464] @ 0x00401c30: beq       r2,r0,0x401c50
        76 [xor: 0xfa3c640c] @ 0x00401c50: addu      r2,r0,r16
        77 [xor: 0xfa3c71a4] @ 0x00401c58: lw        r31,24(r29)  mem: 0x7fff7fb0
        78 [xor: 0x85c3f1bf] @ 0x00401c60: lw        r17,20(r29)  mem: 0x7fff7fac
        79 [xor: 0xfa3c71ab] @ 0x00401c68: lw        r16,16(r29)  mem: 0x7fff7fa8
        80 [xor: 0xfa3c719b] @ 0x00401c70: addiu     r29,r29,32
        81 [xor: 0xfa3c6443] @ 0x00401c78: jr        r31
        82 [xor: 0xfa3c718b] @ 0x004009a8: bne       r2,r0,0x4009c0
        83 [xor: 0x85c3f113] @ 0x004009b0: lw        r2,0(r16)  mem: 0x7fff8004
        84 [xor: 0x85c3f16b] @ 0x004009b8: j         0x4009c8
        85 [xor: 0x85c3f103] @ 0x004009c8: sw        r2,-32700(r28)  mem: 0x10000324
        86 [xor: 0x85c3fde3] @ 0x004009d0: lw        r31,20(r29)  mem: 0x7fff7fcc
        87 [xor: 0xfa3c7dd6] @ 0x004009d8: lw        r16,16(r29)  mem: 0x7fff7fc8
        88 [xor: 0xfa3c7d8e] @ 0x004009e0: addiu     r29,r29,24
        89 [xor: 0xfa3c7136] @ 0x004009e8: jr        r31
        90 [xor: 0xfa3c7956] @ 0x00400558: lw        r31,16(r29)  mem: 0x7fff7fe0
        91 [xor: 0xfa3c795e] @ 0x00400560: addiu     r29,r29,24
        92 [xor: 0xfa3c7d8e] @ 0x00400568: jr        r31
        93 [xor: 0xfa3c795e] @ 0x004001b0: sw        r0,-32592(r28)  mem: 0x10000390
        94 [xor: 0x85c3f9bf] @ 0x004001b8: addu      r4,r0,r16
        95 [xor: 0xfa3c79e4] @ 0x004001c0: addu      r5,r0,r17
        96 [xor: 0xc090acf8] @ 0x004001c8: addu      r6,r0,r18
        97 [xor: 0xc090aca8] @ 0x004001d0: jal       0x4001f0
        98 [xor: 0xc090acb8] @ 0x004001f0: addiu     r29,r29,-24
        99 [xor: 0xc090af48] @ 0x004001f8: sw        r31,16(r29)  mem: 0x7fff7fe0
       100 [xor: 0xc090ae98] @ 0x00400200: jal       0x4003f8
       101 [xor: 0xbf6f2810] @ 0x004003f8: lw        r2,-32624(r28)  mem: 0x10000370
       102 [xor: 0xbf6f2f80] @ 0x00400400: addiu     r29,r29,-32
       103 [xor: 0xbf6f2f90] @ 0x00400408: sw        r31,24(r29)  mem: 0x7fff7fc8
       104 [xor: 0xbf6f2f80] @ 0x00400410: sw        r17,20(r29)  mem: 0x7fff7fc4
       105 [xor: 0xbf6f2fb0] @ 0x00400418: sw        r16,16(r29)  mem: 0x7fff7fc0
       106 [xor: 0xbf6f2f80] @ 0x00400420: bne       r2,r0,0x400510
       107 [xor: 0xbf6f2f91] @ 0x00400428: addiu     r2,r0,1
       108 [xor: 0xbf6f2f81] @ 0x00400430: sw        r2,-32624(r28)  mem: 0x10000370
       109 [xor: 0xaf6f2ff0] @ 0x00400438: lui       r4,0x1000
       110 [xor: 0xbf6f2f80] @ 0x00400440: lw        r4,928(r4)  mem: 0x100003a0
       111 [xor: 0x4090d06e] @ 0x00400448: addiu     r2,r0,-1
       112 [xor: 0x4090d086] @ 0x00400450: bne       r4,r2,0x4004a0
       113 [xor: 0x3f6f507a] @ 0x004004a0: addu      r17,r0,r4
       114 [xor: 0x3f6f5022] @ 0x004004a8: beq       r17,r0,0x4004f8
       115 [xor: 0x3f2f518a] @ 0x004004f8: lui       r4,0x40
       116 [xor: 0x3f2f522a] @ 0x00400500: addiu     r4,r4,592
       117 [xor: 0x3f2f5762] @ 0x00400508: jal       0x400750
       118 [xor: 0x3f2f551a] @ 0x00400750: addiu     r29,r29,-24
       119 [xor: 0x3f2f552a] @ 0x00400758: sw        r16,16(r29)  mem: 0x7fff7fa8
       120 [xor: 0x3f6f574b] @ 0x00400760: addu      r16,r0,r4
       121 [xor: 0x3f6f575b] @ 0x00400768: sw        r31,20(r29)  mem: 0x7fff7fac
       122 [xor: 0x3f6f5583] @ 0x00400770: jal       0x4007d8
       123 [xor: 0xae6e5543] @ 0x004007d8: lw        r7,-32720(r28)  mem: 0x10000310
       124 [xor: 0xae6e5593] @ 0x004007e0: addiu     r29,r29,-32
       125 [xor: 0xae6e5583] @ 0x004007e8: sw        r31,24(r29)  mem: 0x7fff7f90
       126 [xor: 0xae6e5593] @ 0x004007f0: beq       r7,r0,0x400890
       127 [xor: 0x5191a59c] @ 0x004007f8: lw        r2,4(r7)  mem: 0x10000154
       128 [xor: 0x51d1a83c] @ 0x00400800: addu      r4,r0,r0
       129 [xor: 0x51d1a854] @ 0x00400808: beq       r2,r0,0x400868
       130 [xor: 0x51d1a82c] @ 0x00400868: lw        r3,4(r7)  mem: 0x10000154
       131 [xor: 0x51d1a83d] @ 0x00400870: sltiu     r2,r3,32
       132 [xor: 0x51d1a94d] @ 0x00400878: bne       r2,r0,0x400900
       133 [xor: 0x51d1a83d] @ 0x00400900: addiu     r2,r3,1
       134 [xor: 0x51d1a82d] @ 0x00400908: sw        r2,4(r7)  mem: 0x10000154
       135 [xor: 0x51d1a83c] @ 0x00400910: sll       r2,r3,1
       136 [xor: 0x51d1a80c] @ 0x00400918: addu      r2,r2,r3
       137 [xor: 0x51d1a83c] @ 0x00400920: sll       r2,r2,2
       138 [xor: 0x51d1a824] @ 0x00400928: addiu     r2,r2,8
       139 [xor: 0x41d1a964] @ 0x00400930: addu      r2,r7,r2
       140 [xor: 0x41d1a91c] @ 0x00400938: j         0x400948
       141 [xor: 0x41d1a974] @ 0x00400948: lw        r31,24(r29)  mem: 0x7fff7f90
       142 [xor: 0x41d1a984] @ 0x00400950: addiu     r29,r29,32
       143 [xor: 0x41d1a7ac] @ 0x00400958: jr        r31
       144 [xor: 0x51d1a82c] @ 0x00400778: addu      r4,r0,r2
       145 [xor: 0x51d1a8dc] @ 0x00400780: beq       r4,r0,0x4007b0
       146 [xor: 0x41d1a994] @ 0x00400788: addu      r2,r0,r0
       147 [xor: 0x41d1a986] @ 0x00400790: addiu     r3,r0,2
       148 [xor: 0x41d1a9b6] @ 0x00400798: sw        r3,0(r4)  mem: 0x10000158
       149 [xor: 0x41d1a986] @ 0x004007a0: sw        r16,4(r4)  mem: 0x1000015c
       150 [xor: 0x41d1a99e] @ 0x004007a8: j         0x4007b8
       151 [xor: 0x41d1ab9e] @ 0x004007b8: lw        r31,20(r29)  mem: 0x7fff7fac
       152 [xor: 0x4191a9bf] @ 0x004007c0: lw        r16,16(r29)  mem: 0x7fff7fa8
       153 [xor: 0x4191a987] @ 0x004007c8: addiu     r29,r29,24
       154 [xor: 0x4191ab5f] @ 0x004007d0: jr        r31
       155 [xor: 0x4191ae8f] @ 0x00400510: lw        r31,24(r29)  mem: 0x7fff7fc8
       156 [xor: 0x3e6e2ebb] @ 0x00400518: lw        r17,20(r29)  mem: 0x7fff7fc4
       157 [xor: 0x3e6e2e8b] @ 0x00400520: lw        r16,16(r29)  mem: 0x7fff7fc0
       158 [xor: 0x3e6e2efb] @ 0x00400528: addiu     r29,r29,32
       159 [xor: 0x3e6e29db] @ 0x00400530: jr        r31
       160 [xor: 0x3e6e2ef9] @ 0x00400208: lw        r2,0(r4)  mem: 0x10000158
       161 [xor: 0x3e6e2eee] @ 0x00400210: addiu     r2,r2,3
       162 [xor: 0x4191aed8] @ 0x00400218: lw        r5,0(r4)  mem: 0x10000158
       163 [xor: 0x4191aeef] @ 0x00400220: addiu     r3,r3,3
       164 [xor: 0x4191aef8] @ 0x00400228: addiu     r5,r5,3
       165 [xor: 0x4191aeed] @ 0x00400230: addu      r2,r0,r0

sim: ** simulation statistics **
sim_num_insn                    165 # total number of instructions executed
sim_num_refs                     45 # total number of loads and stores executed
sim_elapsed_time                  1 # total simulation time in seconds
sim_inst_rate              165.0000 # simulation speed (in insts/sec)
sim_num_RAW_hazard_q1             0 # total number of RAW hazards (q1)
sim_num_RAW_hazard_q2             0 # total number of RAW hazards (q2)
sim_num_WAW_hazard_q3             0 # total number of WAW hazards (q3)
sim_num_structural_hazard_q3            0 # total number of structural hazards (q3)
CPI_from_RAW_hazard_q1       1.0000 # CPI from RAW hazard (q1)
CPI_from_RAW_hazard_q2       1.0000 # CPI from RAW hazard (q2)
CPI_from_WAW_and_Structural_hazard_q3       1.0000 # CPI from WAW and structural hazards (q3)
sim_num_loads                    25 # total number of load instructions
sim_load_ratio               0.1515 # load instruction fraction
sim_num_lduh                      3 # total number of load use hazards
sim_load_use_ratio           0.0182 # load use fraction
ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                  23104 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size                   4096 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                    9 # total number of pages allocated
mem.page_mem                    36k # total size of memory pages allocated
mem.ptab_misses                   9 # total first level page table misses
mem.ptab_accesses            142424 # total page table accesses
mem.ptab_miss_rate           0.0001 # first level page table miss rate

